# nginx.conf.template  (uses $APP_VERSION via envsubst)

events { worker_connections 1024; }

http {
  include /etc/nginx/mime.types;

  # Ensure .mjs serves as JS (in addition to mime.types)
  types { application/javascript mjs; }

  default_type  application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/wasm text/xml application/xml application/xml+rss text/javascript;

  error_log  /var/log/nginx/error.log debug;
  access_log /var/log/nginx/access.log;

  # ───────── Canonical version handling (no loops) ─────────
  # Strip any existing version= while preserving other params
  map $args $args_wo_version {
    "~^(?<pre>.*?)(^|&)version=[^&]*(?<post>&.*)?$" "$pre$post";
    default "$args";
  }
  # Canonical querystring: other params (if any) + version=$APP_VERSION
  map $args_wo_version $canon_qs {
    ""      "version=$APP_VERSION";
    default "$args_wo_version&version=$APP_VERSION";
  }
  # Need redirect if version missing/mismatched
  map $arg_version $need_vredir {
    "~^$APP_VERSION$" 0;
    default           1;
  }
  # Build final redirect URL for generic assets
  map "$uri?$canon_qs" $redir_url { default $uri?$canon_qs; }

  ########################################################################
  # PROD
  ########################################################################
  server {
    listen 8080;
    server_name knowtowin.com;

    absolute_redirect off;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-App-Version $APP_VERSION always;

    root  /usr/share/nginx/html;
    index index.html;

    # App shell must not be cached
    location = /index.html { add_header Cache-Control "no-store, must-revalidate" always; add_header Pragma "no-cache" always; add_header Expires "0" always; try_files $uri =404; }
    location = /flutter_bootstrap.js { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /manifest.json { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }

    # Service workers: no-store, no redirect
    location = /flutter_service_worker.js { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /sw-offline.js           { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /firebase-messaging-sw.js{ add_header Cache-Control "no-store, must-revalidate" always; add_header Service-Worker-Allowed "/" always; expires -1; try_files $uri =404; }
    location = /sw-kill.js              { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }

    # Version probe
    location = /__app_version { default_type text/plain; add_header Cache-Control "no-store, must-revalidate" always; return 200 "$APP_VERSION"; }

    # ── Font Awesome overrides FIRST (match %20 and %2520) ──
    location ~* ^/assets/packages/font_awesome_flutter/lib/fonts/Font(?:%20|%2520)Awesome(?:%20|%2520)7(?:%20|%2520)(Brands-Regular-400|Free-Regular-400|Free-Solid-900)\.otf$ {
      return 302 /Font%20Awesome%207%20$1.otf?$canon_qs;
    }

    # Static assets → enforce one canonical ?version, then cache forever
    location ~* \.(?:mjs|js|css|png|jpg|jpeg|gif|ico|svg|webp|wasm|otf|woff2?|ttf|json)$ {
      if ($need_vredir) { return 302 $redir_url; }

      add_header Cache-Control "public, max-age=31536000, immutable" always;
      expires 1y;
      try_files $uri =404;
    }

    # One-tap hard refresh
    location = /__force_update__ {
      default_type text/plain;                      # avoids download
      add_header Clear-Site-Data "\"cache\", \"storage\"" always;
      return 200 "ok\n";
    }

    # SPA fallback (ALL app routes) → also no-store
    location / {
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-store, must-revalidate" always;
      add_header Cross-Origin-Opener-Policy same-origin-allow-popups always;
      add_header Cross-Origin-Embedder-Policy credentialless always;
    }
  }

  ########################################################################
  # DEV
  ########################################################################
  server {
    listen 8080;
    server_name devapp.knowtowin.com;

    absolute_redirect off;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-App-Version $APP_VERSION always;

    root  /usr/share/nginx/devhtml;
    index index.html;

    location = /index.html { add_header Cache-Control "no-store, must-revalidate" always; add_header Pragma "no-cache" always; add_header Expires "0" always; try_files $uri =404; }
    location = /flutter_bootstrap.js { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /manifest.json { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }

    location = /flutter_service_worker.js { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /sw-offline.js           { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /firebase-messaging-sw.js{ add_header Cache-Control "no-store, must-revalidate" always; add_header Service-Worker-Allowed "/" always; expires -1; try_files $uri =404; }
    location = /sw-kill.js              { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }

    location = /__app_version { default_type text/plain; add_header Cache-Control "no-store, must-revalidate" always; return 200 "$APP_VERSION"; }

    # Font Awesome overrides FIRST
    location ~* ^/assets/packages/font_awesome_flutter/lib/fonts/Font(?:%20|%2520)Awesome(?:%20|%2520)7(?:%20|%2520)(Brands-Regular-400|Free-Regular-400|Free-Solid-900)\.otf$ {
      return 302 /Font%20Awesome%207%20$1.otf?$canon_qs;
    }

    location ~* \.(?:mjs|js|css|png|jpg|jpeg|gif|ico|svg|webp|wasm|otf|woff2?|ttf|json)$ {
      if ($need_vredir) { return 302 $redir_url; }

      add_header Cache-Control "public, max-age=31536000, immutable" always;
      expires 1y;
      try_files $uri =404;
    }

    location = /__force_update__ { default_type text/plain; add_header Clear-Site-Data "\"cache\", \"storage\"" always; return 200 "ok\n"; }

    location / {
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-store, must-revalidate" always;
      add_header Cross-Origin-Opener-Policy same-origin-allow-popups always;
      add_header Cross-Origin-Embedder-Policy credentialless always;
    }
  }

  ########################################################################
  # Localhost fallback
  ########################################################################
  server {
    listen 8080;
    server_name localhost 127.0.0.1;

    absolute_redirect off;
    add_header X-App-Version $APP_VERSION always;

    root /usr/share/nginx/html;
    index index.html;

    location = /index.html { add_header Cache-Control "no-store, must-revalidate" always; add_header Pragma "no-cache" always; add_header Expires "0" always; try_files $uri =404; }
    location = /flutter_bootstrap.js { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /manifest.json { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }

    location = /flutter_service_worker.js { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /sw-offline.js           { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }
    location = /firebase-messaging-sw.js{ add_header Cache-Control "no-store, must-revalidate" always; add_header Service-Worker-Allowed "/" always; expires -1; try_files $uri =404; }
    location = /sw-kill.js              { add_header Cache-Control "no-store, must-revalidate" always; expires -1; try_files $uri =404; }

    location = /__app_version { default_type text/plain; add_header Cache-Control "no-store, must-revalidate" always; return 200 "$APP_VERSION"; }

    # Font Awesome overrides FIRST
    location ~* ^/assets/packages/font_awesome_flutter/lib/fonts/Font(?:%20|%2520)Awesome(?:%20|%2520)7(?:%20|%2520)(Brands-Regular-400|Free-Regular-400|Free-Solid-900)\.otf$ {
      return 302 /Font%20Awesome%207%20$1.otf?$canon_qs;
    }

    location ~* \.(?:mjs|js|css|png|jpg|jpeg|gif|ico|svg|webp|wasm|otf|woff2?|ttf|json)$ {
      if ($need_vredir) { return 302 $redir_url; }

      add_header Cache-Control "public, max-age=31536000, immutable" always;
      expires 1y;
      try_files $uri =404;
    }

    location = /__force_update__ { default_type text/plain; add_header Clear-Site-Data "\"cache\", \"storage\"" always; return 200 "ok\n"; }

    location / {
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-store, must-revalidate" always;
      add_header Cross-Origin-Opener-Policy same-origin-allow-popups always;
      add_header Cross-Origin-Embedder-Policy credentialless always;
    }
  }
}
