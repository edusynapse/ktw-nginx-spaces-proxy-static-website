events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;

    # Explicit MIME for Flutter .mjs (ES module)
    types { application/javascript mjs; }

    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/wasm text/xml application/xml application/xml+rss text/javascript;

    # Debug logs (visible in DO App Platform logs)
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # ---------- One policy map for all responses ----------
    # Never cache these; revalidate everything else.
    map $uri $ktw_cache_control {
        /index.html                                  "no-store, must-revalidate";
        /flutter_service_worker.js                   "no-store, must-revalidate";
        /firebase-messaging-sw.js                    "no-store, must-revalidate";
        /sw-offline.js                               "no-store, must-revalidate";
        /version.json                                "no-store, must-revalidate";
        default                                      "no-cache, must-revalidate";
    }
    # (Map lives at http{} level by design.) :contentReference[oaicite:1]{index=1}

    ########################################################################
    # PROD: knowtowin.com  -> /usr/share/nginx/html
    ########################################################################
    server {
        listen 8080;
        server_name knowtowin.com;

        root /usr/share/nginx/html;
        index index.html;

        # Revalidation + header inheritance FIX
        etag on;  # allow 304s on unchanged files (Last-Modified also works) :contentReference[oaicite:2]{index=2}
        add_header Cache-Control $ktw_cache_control always;                     # <-- applies to ALL locations
        add_header Cross-Origin-Opener-Policy "same-origin-allow-popups" always;
        add_header Cross-Origin-Embedder-Policy "credentialless" always;
        add_header X-KTW-Policy "revalidate-b-final" always;                    # debug marker

        # Kill/neutralize Flutter SW so caching rules actually apply
        location = /flutter_service_worker.js {
            alias /usr/share/nginx/html/sw-kill.js;
        }
        location = /firebase-messaging-sw.js {
            alias /usr/share/nginx/html/sw-kill.js;
        }

        # HTML entry: never cache + wipe HTTP/SW caches on each load
        location = /index.html {
            add_header Clear-Site-Data "\"cache\"" always;  # do NOT include "storage" unless you want to nuke logins
            expires -1;
        }  # Clear-Site-Data spec ref. :contentReference[oaicite:3]{index=3}

        # Exact Font Awesome path fixes (keep)
        location = "/assets/packages/font_awesome_flutter/lib/fonts/Font%20Awesome%207%20Brands-Regular-400.otf" {
            rewrite ^ /Font%20Awesome%207%20Brands-Regular-400.otf break;
        }
        location = "/assets/packages/font_awesome_flutter/lib/fonts/Font%20Awesome%207%20Free-Regular-400.otf" {
            rewrite ^ /Font%20Awesome%207%20Free-Regular-400.otf break;
        }
        location = "/assets/packages/font_awesome_flutter/lib/fonts/Font%20Awesome%207%20Free-Solid-900.otf" {
            rewrite ^ /Font%20Awesome%207%20Free-Solid-900.otf break;
        }

        # SPA fallback
        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    ########################################################################
    # DEV: devapp.knowtowin.com  -> /usr/share/nginx/devhtml
    ########################################################################
    server {
        listen 8080;
        server_name devapp.knowtowin.com;

        root /usr/share/nginx/devhtml;
        index index.html;

        etag on;
        add_header Cache-Control $ktw_cache_control always;
        add_header Cross-Origin-Opener-Policy "same-origin-allow-popups" always;
        add_header Cross-Origin-Embedder-Policy "credentialless" always;
        add_header X-KTW-Policy "revalidate-b-final" always;

        location = /flutter_service_worker.js { alias /usr/share/nginx/devhtml/sw-kill.js; }
        location = /firebase-messaging-sw.js { alias /usr/share/nginx/devhtml/sw-kill.js; }

        location = /index.html {
            add_header Clear-Site-Data "\"cache\"" always;
            expires -1;
        }

        location = "/assets/packages/font_awesome_flutter/lib/fonts/Font%20Awesome%207%20Brands-Regular-400.otf" {
            rewrite ^ /Font%20Awesome%207%20Brands-Regular-400.otf break;
        }
        location = "/assets/packages/font_awesome_flutter/lib/fonts/Font%20Awesome%207%20Free-Regular-400.otf" {
            rewrite ^ /Font%20Awesome%207%20Free-Regular-400.otf break;
        }
        location = "/assets/packages/font_awesome_flutter/lib/fonts/Font%20Awesome%207%20Free-Solid-900.otf" {
            rewrite ^ /Font%20Awesome%207%20Free-Solid-900.otf break;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    ########################################################################
    # Optional: localhost fallback
    ########################################################################
    server {
        listen 8080;
        server_name localhost 127.0.0.1;

        root /usr/share/nginx/html;
        index index.html;

        etag on;
        add_header Cache-Control $ktw_cache_control always;
        add_header Cross-Origin-Opener-Policy "same-origin-allow-popups" always;
        add_header Cross-Origin-Embedder-Policy "credentialless" always;
        add_header X-KTW-Policy "revalidate-b-final" always;

        location = /flutter_service_worker.js { alias /usr/share/nginx/html/sw-kill.js; }
        location = /firebase-messaging-sw.js { alias /usr/share/nginx/html/sw-kill.js; }

        location = /index.html {
            add_header Clear-Site-Data "\"cache\"" always;
            expires -1;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
